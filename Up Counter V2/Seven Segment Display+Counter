`timescale 1ns / 1ps


module seven_segment_display(
    input clk,
    input i_btn,
    output reg [6:0] seg,
    output [3:0] an
    );
    
    reg [4:0]count=0;
    reg r_btn=0;
    wire q_debounce;
    debouncer debouncer1 (.clk(clk), .btn(i_btn), .q_out(q_debounce));
    
    assign an=4'b1110; //enables when low signal
    
    always@(posedge clk) begin
        r_btn<=q_debounce;
        if(r_btn==1 && q_debounce==0 &&count<10)
            count<=count+1;
        else if(count==10)
            count<=0;    
    end
    
    always@(posedge clk) begin
        case(count) 
            4'b0000: seg=  7'b0000001; // "0"
            4'b0001: seg = 7'b1001111; // "1" 
            4'b0010: seg = 7'b0010010; // "2" 
            4'b0011: seg = 7'b0000110; // "3" 
            4'b0100: seg = 7'b1001100; // "4" 
            4'b0101: seg = 7'b0100100; // "5" 
            4'b0110: seg = 7'b0100000; // "6" 
            4'b0111: seg = 7'b0001111; // "7" 
            4'b1000: seg = 7'b0000000; // "8"     
            4'b1001: seg = 7'b0000100; // "9" 
            default: seg = 7'b0000001; // "0"
        endcase
    end
endmodule
