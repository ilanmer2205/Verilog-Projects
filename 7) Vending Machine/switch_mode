//gets all m_x and btn_x inputs and connects them to the output in the needed models
module switch_mode( 
    input clk,  
    input btn_mid, 
    input i_btn_u, i_btn_l, i_btn_r, i_btn_d,
    output reg m_1, m_5, m_10, m_20, //goes ONLY to input of 'money_reciever' model
    output reg i_rst, cancel_btn, i_cash_rst,
    output reg inc_1,inc_5,inc_10,inc_20,
    output reg [2:0]current_mode //led
);

    parameter IDLE=2'd0, ON=2'd1, OFF=2'd2 ;    
        
    reg [1:0]r_btn_mid=0;
    reg [1:0] mid_state=0;
    reg r_mid=0;
     
    always@(posedge clk) begin
        case(mid_state)
            IDLE: mid_state<=btn_mid? ON: IDLE;
            ON: begin
                mid_state<=OFF;
                r_mid<=1; end
            OFF: begin
                mid_state<=btn_mid ? OFF: IDLE;
                r_mid<=0; end
        endcase
    end 
    
    always@(posedge clk) begin
        if(r_mid)
            if( r_btn_mid==2)
                r_btn_mid<=0;
            else if(r_btn_mid<2)
                r_btn_mid<= r_btn_mid+1; 
    end
            
    always@(posedge clk) begin        
        if(r_btn_mid==0)
            current_mode<=3'b001; //first led
        else if (r_btn_mid==1)
            current_mode<=3'b010; //second led 
             else if (r_btn_mid==2)
                  current_mode<=3'b100; //third led 
    end
    
    always@(posedge clk) begin
        case(r_btn_mid) //costumer payment mode
            0: begin 
                m_1<=i_btn_l;
                m_5<=i_btn_u;
                m_10<=i_btn_r;
                m_20<=i_btn_d;
                
                cancel_btn<= 1'b0;
                i_rst<=1'b0;
                i_cash_rst<=1'b0;
                
                inc_1<= 1'b0;
                inc_5<= 1'b0;
                inc_10<= 1'b0;
                inc_20<= 1'b0; end    
            1: begin //enter cancel and rst mode
                m_1<=1'b0;
                m_5<=1'b0;
                m_10<=1'b0;
                m_20<=1'b0;
                
                cancel_btn<= i_btn_l;
                i_rst<=i_btn_r;
                i_cash_rst<=i_btn_u;
                
                inc_1<= 1'b0;
                inc_5<= 1'b0;
                inc_10<= 1'b0;
                inc_20<= 1'b0; end
            2: begin
                m_1<=1'b0;
                m_5<=1'b0;
                m_10<=1'b0;
                m_20<=1'b0;
                
                cancel_btn<= 1'b0;
                i_rst<=1'b0;
                i_cash_rst<=1'b0;
                
                inc_1<= i_btn_l;
                inc_5<= i_btn_u;
                inc_10<= i_btn_r;
                inc_20<= i_btn_d; end 
            default: begin
                m_1<=1'b0;
                m_5<=1'b0;
                m_10<=1'b0;
                m_20<=1'b0;
                
                cancel_btn<=1'b0;
                i_rst<=1'b0;
                i_cash_rst<=1'b0;
                
                inc_1<= 1'b0;
                inc_5<= 1'b0;
                inc_10<= 1'b0;
                inc_20<= 1'b0; end
        endcase
    end
endmodule
