module store_money(
    input clk, i_cash_rst,
    input on_inc_1, on_inc_5, on_inc_10, on_inc_20, //get m_x from 'money_reciever' module
    input [2:0] current_mode,
    
    input [5:0] i_am_1, //output of 'mode' module
    input [5:0] i_am_5,
    input [5:0] i_am_10,
    input [2:0] i_am_20,
    output [5:0] o_am_1, //input of 'check_change' module
    output [5:0] o_am_5,
    output [5:0] o_am_10,
    output [2:0] o_am_20,
    output reg [6:0] tot_am=0
    );
    
    reg [5:0] r_am_1=0, r_am_5=0, r_am_10=0, r_am_20=0;
    
    assign o_am_1= (current_mode==3'b100 || current_mode==3'b010 ) ?r_am_1: i_am_1; 
    assign o_am_5= (current_mode==3'b100 || current_mode==3'b010 ) ?r_am_5: i_am_5;
    assign o_am_10= (current_mode==3'b100 || current_mode==3'b010 ) ?r_am_10: i_am_10;
    assign o_am_20= (current_mode==3'b100 || current_mode==3'b010 ) ?r_am_20: i_am_20;   
        
    always@(posedge clk) begin //when operator inserts money, or takes money out
        if (i_cash_rst) begin 
            r_am_1<=0;        
            r_am_5<=0;        
            r_am_10<=0;       
            r_am_20<=0; end   
        else if(current_mode==3'b100)begin //fill the machine with inserted operators money
            r_am_1<=r_am_1+on_inc_1;    
            r_am_5<=r_am_5+on_inc_5;    
            r_am_10<=r_am_10+on_inc_10; 
            r_am_20<=r_am_20+on_inc_20; end
            else begin //updates register to the amount of money 
                r_am_1<=i_am_1;      
                r_am_5<=i_am_5;      
                r_am_10<=i_am_10;    
                r_am_20<=i_am_20; end
    end    
     
    always@(posedge clk) begin //calculated total sum of money in the machine
        tot_am<=i_am_1+ i_am_5*5+ i_am_10*10+ i_am_20*20;
    end

endmodule


